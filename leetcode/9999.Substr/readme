子序列问题：
1. 最长公共子序列
   a. 连续
   b. 不连续
   input: String a, String b
   思路：动态归化问题
      不连续最长共序列问题
          a = a[0] + a[1:]
          b = b[0] + b[1:]
          max_sub(a,b) = 
            if( a[0] == b[0] ) return max(1 + max_sub(a[1:], b[1:]), max_sub(a, b[1:]), max_sub(a[1:], b));
            else return max(max_sub(a[1:], b[1:]), max_sub(a, b[1:]), max_sub(a[1:], b))
      连续最长共序列问题
          a = a[0] + a[1:]
          b = b[0] + b[1:]
          max_sub(a,b) = 
            if( a[0]!=b[0]) return max_len, max_sub(a, b[1:]), max(a[1:], b);
            return 1+max_sub(a[1:], b[1:])
2. 符合某一条件的子序列个数
   input: String s, String target
   s的子序列中，等于target的个数子序列个数：
